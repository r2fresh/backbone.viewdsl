{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# DSL for defining Backbone.View hierarchies\r\n\r\nIt's not fully implemented yet!\r\n\r\n## Specs\r\n\r\nSpecs are strings which can point to some JS object:\r\n\r\n  * `module1/module2:obj1.obj2`\r\n    points to `obj2` inside `obj1` in `module1/module2` AMD module.\r\n\r\n  * `obj1.obj2`\r\n    points to `obj2` inside `obj1` inside `window` object\r\n\r\n## Wrap DOM with views\r\n\r\nWrap DOM with views, using standard tags:\r\n\r\n    <div view=\"myapp/views:MyView\" class=\"some-class\"></div>\r\n\r\nAttribute `view` should be a spec.\r\n\r\nPassing parameters to views:\r\n\r\n  * Parameter names are converted to camelCase, so `another-param` becomes\r\n    `anotherParam`.\r\n\r\n  * If parameter value starts with `this.` it then will be passed by reference\r\n    and the reference will be equal to the one from the passed context.\r\n\r\n## Value interpolation\r\n\r\nInterpolate string values, DOM nodes and jQuery elements:\r\n\r\n    <div>\r\n      {{ somevalue }}\r\n    </div>\r\n\r\n## If blocks\r\n\r\n    <div if=\"hasCounts\">\r\n\r\n    </div>\r\n\r\nElement would be removed if `hasCounts()` or `hasCounts` evaluates to `false`.\r\n","name":"Backbone.ViewDSL","tagline":"DSL for defining Backbone.View hierarchies","google":""}